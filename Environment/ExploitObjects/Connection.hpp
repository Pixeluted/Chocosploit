//
// Created by Pixeluted on 05/05/2025.
//
#pragma once
#include "lua.h"
#include "../ExploitObject.hpp"

static int indexFireRef;
static int indexDeferRef;
static int indexEnableRef;
static int indexDisableRef;
static int indexDisconnectRef;

struct Connection final : ExploitObject<ConnectionObject> {
    const char* GetObjectMtName() override;
    void InitializeObjectMetatable(lua_State *L) override;

    uintptr_t connectionAddress;
    bool isValid;
    bool isLuaConnection;
    bool isForeignState;
    bool isOnceConnection;
    bool isWaitConnection;
    int threadRefId;
    int functionRefId;
    uintptr_t originalEnabledValue;
};

void NewConnection(lua_State *L, uintptr_t connectionAddr);